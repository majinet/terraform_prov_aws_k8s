name: setup Charmed kubeflow

on:
  workflow_dispatch:

jobs:
  setup_kubeflow:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3
      - name: install juju and kubeflow
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo snap install juju --classic
            juju bootstrap microk8s
            juju add-model kubeflow
            
            sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
            
            juju deploy kubeflow --trust  --channel=1.7/stable

      - name: Sleep for 1200 seconds
        uses: whatnick/wait-action@master
        with:
          time: '1200s'

      - name: check running status
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
            kubectl wait --for=jsonpath='{.status.phase}'=Running --timeout=2400s pod --all -n kubeflow

      - name: Sleep for 300 seconds
        uses: whatnick/wait-action@master
        with:
          time: '300s'

      - name: configuration
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            microk8s enable metallb:10.64.140.43-10.64.140.49
            juju config dex-auth public-url=http://10.64.140.43.nip.io
            juju config oidc-gatekeeper public-url=http://10.64.140.43.nip.io
            juju config dex-auth static-username=admin
            juju config dex-auth static-password=admin
            
            juju run --unit istio-pilot/0 -- "export JUJU_DISPATCH_PATH=hooks/config-changed; ./dispatch"

      - name: install kfp client
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo apt install python3-pip -y
            pip3 install kfp --upgrade --user
            echo 'export PATH=$PATH:~/.local/bin' | tee -a ~/.bashrc

      - name: configure Minio access
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            juju config minio access-key=minio
            juju config minio secret-key=minio1234
            
            # Create service account in Minio and change accesskey and secret key in Client api

      - name: provisioning PostgreSQL
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            microk8s helm3 repo add bitnami https://charts.bitnami.com/bitnami
            microk8s helm3 install postgreSQL -f postgresSQL/config/values.yaml bitnami/postgresql

      - name: install feast Client
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            pip3 install feast --user

      - name: create kubeflow pipeline app storage
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            kubectl apply -f microk8s/config/storage/pvc-kubeflow-pipeline-app.yaml