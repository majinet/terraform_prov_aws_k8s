name: Provisioning microk8s

on:
  workflow_dispatch:

jobs:
  setup_k8s_binary_in_control_plane:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3
      - name: install microk8s
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo snap install microk8s --classic --channel=1.24/stable

      - name: Sleep for 300 seconds
        uses: whatnick/wait-action@master
        with:
          time: '300s'

      - name: configure group
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo usermod -a -G microk8s ubuntu
            newgrp microk8s
            
            microk8s config > ~/.kube/config
            sudo chown -f -R $USER ~/.kube
            sudo snap alias microk8s.kubectl kubectl

      - name: enable add-on
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            #microk8s enable community
            
            microk8s enable dns
            #microk8s enable storage
            microk8s enable hostpath-storage
            #sudo apt update && sudo apt install -y nfs-common
            #microk8s enable nfs
            microk8s enable dashboard
            microk8s enable helm3
            microk8s enable rbac
            #microk8s enable ingress

      - name: Sleep for 60 seconds
        uses: whatnick/wait-action@master
        with:
          time: '60s'

      - name: setup Calicoctl
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            #curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml -O
            #kubectl replace -f calico.yaml
            
            cd /usr/local/bin/
            sudo curl -L https://github.com/projectcalico/calico/releases/latest/download/calicoctl-linux-amd64 -o kubectl-calico
            sudo chmod +x kubectl-calico
            
            #sudo curl -L https://github.com/projectcalico/calico/releases/latest/download/calicoctl-linux-amd64 -o calicoctl
            #sudo chmod +x ./calicoctl

      - name: deploy OPA gateway
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.AWS_EC2_CONTROL_PLANE_IP }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml